[tool.poetry]
name = "ner_application"
version = "0.1.0"
description = ""
authors = []
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
en_core_web_lg = {url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_lg-3.7.1/en_core_web_lg-3.7.1.tar.gz"}
spacy = "^3.7.2"
pydantic = "^2.4.2"
pydantic-settings = "^2.0.3"
flask = "^3.0.0"
bootstrap-flask = "^2.3.3"
flask-wtf = "^1.2.1"
flask-sqlalchemy = "^3.1.1"
pandas = "^2.1.4"
flask-assets = "^2.1.0"
config = "^0.5.1"
ipython = "^8.18.1"

# Optional dependencies for development
pytest = { version = "^7.4.2", optional = true }
black = { version = "^23.9.1", optional = true }
pytest-cov = { version = "^4.1.0", optional = true }
isort = { version = "^5.12.0", optional = true }


[tool.poetry.extras]
dev = [
    "pytest",
    "black",
    "pytest-cov",
    "isort",
]

[tool.poetry.group.dev.dependencies]
black = "^23.12.0"
isort = "^5.13.1"
ruff = "^0.12.11"
mypy = "^1.17.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true
strict = true

[tool.isort]
profile = "black"

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = "--cov=."

[flake8]
per-file-ignores = "__init__.py:F401"